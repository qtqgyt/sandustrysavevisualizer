name: Build Release

on:
  push:
    branches:
      - dev

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Extract version and changelog
        id: extract
        shell: bash
        run: |
          # Get the commit message from the merge commit
          VERSION=$(git rev-parse --short=4 $GITHUB_SHA)
          echo "Version: $VERSION"

          echo "Finished!"

          echo "Version: $VERSION"

          echo "::set-output name=version::$VERSION"

  build:
    needs: prepare-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller

      - name: Build executable
        run: pyinstaller --onefile main.py

      - name: Set artifact path
        id: set_path
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "artifact=dist/main.exe" >> $GITHUB_OUTPUT
          else
            echo "artifact=dist/main" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-SandustrySaveViewer
          path: ${{ steps.set_path.outputs.artifact }}

  create-release:
    needs: [prepare-release, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: b${{ needs.prepare-release.outputs.version }}
          name: Beta ${{ needs.prepare-release.outputs.version }}
          prerelease: true

      - name: Upload Linux Executable
        if: ${{ always() }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/ubuntu-latest-SandustrySaveViewer/main
          asset_name: main-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Executable
        if: ${{ always() }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/windows-latest-SandustrySaveViewer/main.exe
          asset_name: main-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload MacOS Executable
        if: ${{ always() }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts/macos-latest-SandustrySaveViewer/main
          asset_name: main-macos
          asset_content_type: application/octet-stream
